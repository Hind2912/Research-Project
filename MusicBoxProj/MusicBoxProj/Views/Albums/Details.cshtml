@model MusicBoxProj.ViewModel.AlbumDetailsVM
@using System.Text.RegularExpressions;

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Album</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Album Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AlbumName)
        </dd>
        <dt class="col-sm-2">
            Release Date
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt class="col-sm-2">
            Band Name
        </dt>
        <dd class="col-sm-10">
            <a href="/Bands/Details/@Model.Band.BandId">@Html.DisplayFor(model => model.Band.BandName)</a>

        </dd>
    </dl>
    <h5>List of Genres: </h5>
    <ul class="row">
        @foreach (var g in Model.Genres)
        {
            <li>
                <a href="/Genres/Details/@g.GenreId">@g.GenreName</a>
            </li>
        }

    </ul>

    <h5>List of Songs: </h5>

    <ul class="row">

        @foreach (var s in Model.Songs)
        {
            var ytUrl = s.SongFilePath;
            var regex = new Regex(@"(?:youtu\.be\/|youtube\.com\/(?:watch\?.*v=|embed\/))([\w-]+)");

            var match = regex.Match(ytUrl);

            var videoId = match.Groups[1].Value;

            var ytedit = $"https://www.youtube.com/embed/{videoId}";

            <div class="col-md-4">                
                <a href="/Songs/Details/@s.SongId">@s.SongName</a>
                <br>
                <iframe width="300" height="200" src=@ytedit frameborder="0" allowfullscreen></iframe>
            </div>
        }

    </ul>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.AlbumId">Edit</a> |
    <a asp-action="Index">Go to the Albums page</a>
</div>
