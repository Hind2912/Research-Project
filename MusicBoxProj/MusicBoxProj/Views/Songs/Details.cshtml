@model MusicBoxProj.Models.Song
@using System.Text.RegularExpressions;


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Song</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Song Name
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SongName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Album)
        </dt>
        <dd class="col-sm-10">
            <a href="/Albums/Details/@Model.Album.AlbumId">@Html.DisplayFor(model => model.Album.AlbumName)</a>

        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Band)
        </dt>
        <dd class="col-sm-10">
            <a href="/Bands/Details/@Model.Band.BandId">@Html.DisplayFor(model => model.Band.BandName)</a>

        </dd>
        <dt class="col-sm-2">
            Youtube URL
        </dt>
        <dd class="col-sm-10">
            <a href=@Html.DisplayFor(model => model.SongFilePath)>@Html.DisplayFor(model => model.SongFilePath)</a>

        </dd>
        <dd class="col-sm-12">
            @{

                var ytUrl = Model.SongFilePath;

                var regex = new Regex(@"(?:youtu\.be\/|youtube\.com\/(?:watch\?.*v=|embed\/))([\w-]+)");

                var match = regex.Match(ytUrl);

                var videoId = match.Groups[1].Value;

            }
            <div id="ytplayer"></div>
            <div>
                <input type="checkbox" id="shuffleCheckbox" name="shuffleCheckbox">
                <label for="shuffleCheckbox">Shuffle//Will take you to a random song when this one finishes</label>
            </div>
            <div>
                <input type="checkbox" id="bigPlayerCheckbox" name="bigPlayerCheckbox">
                <label for="bigPlayerCheckbox">Theatre Mode// Make the video really big</label>
            </div>
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.SongId">Edit</a> |
    <a asp-action="Index">Go to the Songs page</a>
</div>

@section scripts{
    <script src="https://www.youtube.com/player_api"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var player;
        var shuffleChecked = false;
        var bigPlayerChecked = false;

        function onYouTubePlayerAPIReady() {
            //default stuff for the video
            player = new YT.Player('ytplayer', {
                height: '280',
                width: '500',
                videoId: '@videoId',
                events: {
                    'onStateChange': onPlayerStateChange
                }
            });
        }

        //Listening
        function onPlayerStateChange(event) {
            if (event.data == YT.PlayerState.ENDED && shuffleChecked) {
                window.location.href = '@Url.Action("RandomSong", "Songs")';
            }
        }

        function onTheatreModeChange() {
            //changes size
            var height = bigPlayerChecked ? '680' : '280';
            var width = bigPlayerChecked ? '1280' : '500';
            player.setSize(width, height);
            //Hides other stuff
            if (bigPlayerChecked) {
                $("dt.col-sm-2").hide();
                $("dd.col-sm-10").hide();
            } else {
                $("dt.col-sm-2").show();
                $("dd.col-sm-10").show();
            }
        }

        //CheckBoxes


        $(document).ready(function () {
            $("#shuffleCheckbox").click(function () {
                shuffleChecked = $(this).prop("checked");
            });
        });

        $("#bigPlayerCheckbox").click(function () {
            bigPlayerChecked = $(this).prop("checked");
            onTheatreModeChange();
        });



    </script>
}
